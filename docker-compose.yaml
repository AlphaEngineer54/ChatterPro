version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MGMT_PORT}:${RABBITMQ_MGMT_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - messaging-app-network

  gateway:
    build:
      context: ./Gateway/API-Gateway-Ocelot
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - authservice
      - userservice
      - messageservice
      - dataexportservice
      - notificationservice
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${GATEWAY_PORT}
    networks:
      - messaging-app-network
    restart: always

  authservice:
    build:
      context: ./Services/AuthService
      dockerfile: Dockerfile
    ports:
      - "${AUTHSERVICE_PORT}:${AUTHSERVICE_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${AUTHSERVICE_PORT}
      - MYSQL_CONNECTION=${AUTH_MYSQL_CONNECTION}
    depends_on:
      - auth-db
    networks:
      - messaging-app-network
    restart: always

  auth-db:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=auth_db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - auth-db-data:/var/lib/mysql
      - ./Services/AuthService/Models/Schema/model.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - messaging-app-network
    restart: always

  dataexportservice:
    build:
      context: ./Services/DataExportService
      dockerfile: Dockerfile
    ports:
      - "${DATAEXPORT_PORT}:${DATAEXPORT_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${DATAEXPORT_PORT}
    networks:
      - messaging-app-network
    restart: always

  messageservice:
    build:
      context: ./Services/MessageService
      dockerfile: Dockerfile
    ports:
      - "${MESSAGESERVICE_PORT}:${MESSAGESERVICE_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${MESSAGESERVICE_PORT}
      - MYSQL_CONNECTION=${MESSAGE_MYSQL_CONNECTION}
    depends_on:
      - message-db
    networks:
      - messaging-app-network
    restart: always

  message-db:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=message_db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - message-db-data:/var/lib/mysql
      - ./Services/MessageService/Models/Schema/model.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - messaging-app-network
    restart: always

  notificationservice:
    build:
      context: ./Services/NotificationService
      dockerfile: Dockerfile
    ports:
      - "${NOTIFSERVICE_PORT}:${NOTIFSERVICE_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${NOTIFSERVICE_PORT}
      - MYSQL_CONNECTION=${NOTIF_MYSQL_CONNECTION}
    depends_on:
      - notification-db
    networks:
      - messaging-app-network
    restart: always

  notification-db:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=notification_db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - notification-db-data:/var/lib/mysql
      - ./Services/NotificationService/Models/Schema/model.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - messaging-app-network
    restart: always

  userservice:
    build:
      context: ./Services/UserService
      dockerfile: Dockerfile
    ports:
      - "${USERSERVICE_PORT}:${USERSERVICE_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${USERSERVICE_PORT}
      - MYSQL_CONNECTION=${USER_MYSQL_CONNECTION}
    depends_on:
      - user-db
    networks:
      - messaging-app-network
    restart: always

  user-db:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=user_db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - user-db-data:/var/lib/mysql
      - ./Services/UserService/Models/Schema/model.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - messaging-app-network
    restart: always

volumes:
  auth-db-data:
  message-db-data:
  notification-db-data:
  user-db-data:

networks:
  messaging-app-network:
    driver: bridge
